#!/bin/bash
#
#  pa_sg_res_cut
#    By Wuxian Shi, 13 Feb 2017
#    adapted to keyword arguments by H. J. Bernstein
#    frame window args added by D. Kreitler

source /usr/local/crys-local/ccp4-7.0/bin/ccp4.setup-sh

tempfiles=( )
cleanup() {
  if [ "${logfile}XX" == "XX" ]
    then
      logfile=pa_sg_res.log
  fi 
  echo "POINTLESS LOG:" >> $logfile
  echo "=======================================================================================" >> $logfile
  cat /tmp/pointless$$.log >> $logfile
  echo "=======================================================================================" >> $logfile
  echo "=======================================================================================" >> $logfile
  echo "AIMLESS LOG:" >> $logfile
  echo "=======================================================================================" >> $logfile
  cat /tmp/aimless$$.log >> $logfile

  echo "logfile in $logfile"
  rm -f "${tempfiles[@]}"
}
trap cleanup 0

error() {
  local parent_lineno="$1"
  local message="$2"
  local code="${3:-1}"
  if [[ -n "$message" ]] ; then
    echo "Error on or near line ${parent_lineno}: ${message}; exiting with status ${code}"
  else
    echo "Error on or near line ${parent_lineno}; exiting with status ${code}"
  fi
  exit "${code}"
}
trap 'error ${LINENO}' ERR

touch /tmp/pointless$$.log
tempfiles+=( "/tmp/pointless$$.log" )
touch /tmp/aimless$$.log
tempfiles+=( "/tmp/aimless$$.log" )


if [ XX$1 == "XX--help" ]
  then
  echo "pa_sg_res_cut [-1<first_frame>] [-N<frame_cutoff>] [-R<reslow>] [-r<reshigh>]
        [-S<spacegroup>] [-i<infile>] [-o<outfile>] [-l<logfile>]" >&2
  echo "infile defaults to XDS_ASCII.HKL, outfile to aimless.mtz" >&2
  exit -1
fi

while getopts "1:N:R:r:S:h:o:l:" opt; do
  case $opt in
    1) first_frame="$OPTARG"
    ;;
    N) frame_cutoff="$OPTARG"
    ;;
    R) reslow="$OPTARG"
    ;;
    r) reshigh="$OPTARG"
    ;;
    S) spacegroup="$OPTARG"
    ;;
    i) infile="$OPTARG"
    ;;
    o) outfile="$OPTARG"
    ;;
    l) logfile="$OPTARG"
    ;;
    h)
       echo "pa_sg_res_cut [-1<first_frame>]
                           [-N<frame_cutoff>]
                           [-R<reslow>]
                           [-r<reshigh>]
                           [-S<spacegroup>]
                           [-i<infile>]
                           [-o<outfile>]
                           [-l<logfile>]" >&2
       echo "file defaults to XDS_ASCII.HKL" >&2
       exit -1
    ;;
    \?) echo "Invalid option -$OPTARG" >&2
    ;;
  esac
done

if [ "${infile}XX" == "XX" ]
  then
    infile=XDS_ASCII.HKL
fi 

if [ "${outfile}XX" == "XX" ]
  then
    outfile=aimless.mtz
fi 

if [ "${logfile}XX" == "XX" ]
  then
    logfile=pa_sg_res_cut.log
fi 


spacegroup_arg="spacegroup $spacegroup"
if [ "${spacegroup}XX" == "XX" ]
  then
    spacegroup_arg=${spacegroup}
fi 

resolution_arg="resolution low $reslow high $reshigh"
if [ "${reslow}XX" == "XX" ]
  then
    resolution_arg="resolution high $reshigh"
    if [ "${reshigh}XX" == "XX" ]
    then
      resolution_arg=""
    fi
elif [ "${reshigh}XX" == "XX" ]
  then
    resolution_arg="resolution low $reslow"
fi 

frame_cutoff_arg="exclude batch $frame_cutoff TO 1000000"
if [ "${frame_cutoff}XX" == "XX" ]
  then
    frame_cutoff_arg=${frame_cutoff}
fi

first_frame_arg="exclude batch 1 to $first_frame"
if [ "${first_frame}XX" == "XX" ]
  then
    first_frame_arg=${first_frame}
fi



pointless xdsin $infile hklout /tmp/pa_sg_res_pointless$$.mtz << lla | tee /tmp/pointless$$.log
$spacegroup_arg
lla

aimless hklin /tmp/pa_sg_res_pointless$$.mtz hklout $outfile << eof | tee /tmp/aimless$$.log
$resolution_arg
$frame_cutoff_arg
$first_frame_arg
onlymerge
eof

echo "POINTLESS LOG:" >> $logfile
echo "=======================================================================================" >> $logfile
cat /tmp/pointless$$.log >> $logfile
echo "=======================================================================================" >> $logfile
echo "=======================================================================================" >> $logfile
echo "AIMLESS LOG:" >> $logfile
echo "=======================================================================================" >> $logfile
cat /tmp/aimless$$.log >> $logfile


